[tool.poetry]
name = "aio-openapi"
version = "3.2.1"
description = "Minimal OpenAPI asynchronous server application"
documentation = "https://aio-openapi.readthedocs.io"
repository = "https://github.com/quantmind/aio-openapi"
authors = ["Luca <luca@quantmind.com>"]
license = "BSD-3-Clause"
readme = "readme.md"
packages = [
    { include = "openapi" }
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: JavaScript",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Internet",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Framework :: AsyncIO",
    "Environment :: Web Environment",
]

[tool.poetry.urls]
repository = "https://github.com/quantmind/aio-openapi"
issues = "https://github.com/quantmind/aio-openapi/issues"


[tool.poetry.dependencies]
python = ">=3.8.1,<4"
aiohttp = "^3.8.0"
httptools = "^0.5.0"
simplejson = "^3.17.2"
SQLAlchemy = { version="^2.0.8", extras=["asyncio"] }
SQLAlchemy-Utils = "^0.41.1"
psycopg2-binary = "^2.9.2"
click = "^8.0.3"
python-dateutil = "^2.8.2"
PyYAML = "^6.0"
email-validator = "^1.2.1"
alembic = "^1.8.1"
"backports.zoneinfo" = { version = "^0.2.1", python="<3.9" }
asyncpg = "^0.28.0"

[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
pytest = "^7.1.1"
mypy = "^1.1.1"
sentry-sdk = "^1.4.3"
python-dotenv = "^1.0.0"
openapi-spec-validator = "^0.3.1"
pytest-cov = "^4.0.0"
pytest-mock = "^3.6.1"
isort = "^5.10.1"
types-simplejson = "^3.17.5"
types-python-dateutil = "^2.8.11"
factory-boy = "^3.2.1"
pytest-asyncio = "^0.21.0"
types-pyyaml = "^6.0.12"
ruff = "^0.0.280"

[tool.poetry.group.extras]
optional = true

[tool.poetry.group.extras.dependencies]
aiodns = {version = "^3.0.0"}
PyJWT = {version = "^2.3.0"}
colorlog = {version = "^6.6.0"}
phonenumbers = {version = "^8.12.37"}


[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
Sphinx = {version = "^6.1.3"}
sphinx-copybutton = {version = "^0.5.0"}
sphinx-autodoc-typehints = {version = "^1.12.0"}
aiohttp-theme = {version = "^0.1.6"}
recommonmark = {version = "^0.7.1"}


[tool.poetry.extras]
dev = ["aiodns", "PyJWT", "colorlog", "phonenumbers"]
docs = [
    "Sphinx",
    "recommonmark",
    "aiohttp-theme",
    "sphinx-copybutton",
    "sphinx-autodoc-typehints",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = [
    "tests"
]

[tool.isort]
profile = "black"

[tool.ruff]
select = ["E", "F"]
line-length = 88

[tool.mypy]
# strict = true
disallow_untyped_calls = true
disallow_untyped_defs = true
warn_no_return = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = "openapi.db.openapi.*"
ignore_errors = true
